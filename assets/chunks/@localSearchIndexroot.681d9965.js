const e='{"documentCount":65,"nextId":65,"documentIds":{"0":"/mobile/guide/cordova.html#cordova","1":"/mobile/guide/cordova.html#优势","2":"/mobile/guide/cordova.html#不足","3":"/mobile/guide/cordova.html#资源网站","4":"/mobile/guide/cordova.html#架构图","5":"/mobile/guide/cordova.html#环境搭建","6":"/mobile/guide/cordova.html#node-js-环境搭建","7":"/mobile/guide/cordova.html#git-安装","8":"/mobile/guide/cordova.html#android-环境搭建","9":"/mobile/guide/cordova.html#简介","10":"/mobile/guide/cordova.html#下载","11":"/mobile/guide/cordova.html#安装","12":"/mobile/guide/cordova.html#检测安装结果","13":"/mobile/guide/cordova.html#android-studio","14":"/mobile/guide/cordova.html#设置-android-环境变量","15":"/mobile/guide/cordova.html#gradle-安装","16":"/mobile/guide/cordova.html#ios环境搭建","17":"/mobile/guide/cordova.html#安装-xcode","18":"/mobile/guide/cordova.html#安装部署工具","19":"/mobile/guide/cordova.html#初始化项目","20":"/mobile/guide/cordova.html#安装-cordova-cli","21":"/mobile/guide/cordova.html#创建项目","22":"/mobile/guide/cordova.html#添加平台","23":"/mobile/guide/cordova.html#运行","24":"/mobile/guide/cordova.html#项目目录","25":"/mobile/guide/cordova.html#cordova-js","26":"/mobile/guide/cordova.html#事件","27":"/mobile/guide/cordova.html#设备就绪","28":"/mobile/guide/cordova.html#应用挂起","29":"/mobile/guide/cordova.html#应用回来","30":"/mobile/guide/cordova.html#回退按钮","31":"/mobile/guide/cordova.html#菜单按钮","32":"/mobile/guide/cordova.html#config-xml","33":"/mobile/guide/cordova.html#简介-1","34":"/mobile/guide/cordova.html#基本结构","35":"/mobile/guide/hybrid.html#hybrid","36":"/mobile/guide/hybrid.html#webview","37":"/mobile/guide/hybrid.html#适用场景","38":"/mobile/guide/hybrid.html#实现流程","39":"/mobile/guide/hybrid.html#jsbridge","40":"/mobile/guide/hybrid.html#schema协议","41":"/mobile/guide/#介绍","42":"/mobile/guide/#h5-原生混合开发","43":"/mobile/guide/#javascript开发-原生渲染","44":"/mobile/guide/#react-native","45":"/mobile/guide/#weex","46":"/mobile/guide/#快应用","47":"/mobile/guide/#自绘ui-原生","48":"/mobile/guide/#flutter","49":"/mobile/guide/offline-package.html#移动端离线包方案","50":"/mobile/guide/offline-package.html#从流程图分析-hybrid-性能痛点","51":"/mobile/guide/offline-package.html#相应优化策略","52":"/mobile/guide/offline-package.html#离线包方案","53":"/mobile/guide/offline-package.html#离线包服务平台","54":"/mobile/guide/offline-package.html#离线包构建能力","55":"/mobile/guide/offline-package.html#离线包可用性和使用命中率","56":"/mobile/guide/offline-package.html#离线包安全性考量","57":"/mobile/guide/offline-package.html#用户流量考量","58":"/mobile/guide/share.html#分享","59":"/mobile/guide/share.html#技术文章","60":"/mobile/guide/share.html#技术分享","61":"/mobile/guide/share.html#hybrid","62":"/mobile/guide/share.html#weex","63":"/mobile/guide/share.html#react-native","64":"/mobile/guide/share.html#flutter"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[1,1,28],"1":[1,2,26],"2":[1,2,9],"3":[1,2,12],"4":[1,2,1],"5":[1,1,19],"6":[3,2,29],"7":[2,2,5],"8":[2,2,1],"9":[1,3,10],"10":[1,3,23],"11":[1,3,21],"12":[1,3,7],"13":[2,2,103],"14":[3,4,11],"15":[2,2,32],"16":[1,2,1],"17":[2,3,9],"18":[1,3,9],"19":[1,1,1],"20":[3,2,7],"21":[1,2,14],"22":[1,2,37],"23":[1,2,12],"24":[1,2,38],"25":[2,2,33],"26":[1,1,4],"27":[1,2,23],"28":[1,2,14],"29":[1,2,14],"30":[1,2,14],"31":[1,2,25],"32":[2,1,1],"33":[1,3,18],"34":[1,3,34],"35":[1,1,22],"36":[1,1,34],"37":[1,1,14],"38":[1,1,9],"39":[1,1,67],"40":[1,2,6],"41":[1,1,35],"42":[1,1,58],"43":[1,1,32],"44":[2,2,37],"45":[1,2,12],"46":[1,2,28],"47":[1,1,34],"48":[1,2,46],"49":[1,1,1],"50":[3,1,58],"51":[1,1,109],"52":[1,1,64],"53":[1,1,63],"54":[1,1,80],"55":[1,1,34],"56":[1,1,27],"57":[1,1,62],"58":[1,1,1],"59":[1,1,30],"60":[1,1,70],"61":[1,1,12],"62":[1,1,10],"63":[2,1,8],"64":[1,1,22]},"averageFieldLength":[1.2615384615384615,1.6923076923076923,26.615384615384617],"storedFields":{"0":{"title":"Cordova","titles":[]},"1":{"title":"优势","titles":["Cordova",null]},"2":{"title":"不足","titles":["Cordova",null]},"3":{"title":"资源网站","titles":["Cordova",null]},"4":{"title":"架构图","titles":["Cordova",null]},"5":{"title":"环境搭建","titles":["Cordova"]},"6":{"title":"Node.js 环境搭建","titles":["Cordova","环境搭建"]},"7":{"title":"Git 安装","titles":["Cordova","环境搭建"]},"8":{"title":"Android 环境搭建","titles":["Cordova","环境搭建"]},"9":{"title":"简介","titles":["Cordova","环境搭建","Android 环境搭建"]},"10":{"title":"下载","titles":["Cordova","环境搭建","Android 环境搭建"]},"11":{"title":"安装","titles":["Cordova","环境搭建","Android 环境搭建"]},"12":{"title":"检测安装结果","titles":["Cordova","环境搭建","Android 环境搭建"]},"13":{"title":"Android Studio","titles":["Cordova","环境搭建"]},"14":{"title":"设置 Android 环境变量","titles":["Cordova","环境搭建","Android Studio"]},"15":{"title":"Gradle 安装","titles":["Cordova","环境搭建"]},"16":{"title":"iOS环境搭建","titles":["Cordova","环境搭建"]},"17":{"title":"安装 Xcode","titles":["Cordova","环境搭建","iOS环境搭建"]},"18":{"title":"安装部署⼯具","titles":["Cordova","环境搭建","iOS环境搭建"]},"19":{"title":"初始化项⽬","titles":["Cordova"]},"20":{"title":"安装 Cordova CLI","titles":["Cordova","初始化项⽬"]},"21":{"title":"创建项目","titles":["Cordova","初始化项⽬"]},"22":{"title":"添加平台","titles":["Cordova","初始化项⽬"]},"23":{"title":"运行","titles":["Cordova","初始化项⽬"]},"24":{"title":"项目目录","titles":["Cordova","初始化项⽬"]},"25":{"title":"cordova.js","titles":["Cordova","初始化项⽬"]},"26":{"title":"事件","titles":["Cordova"]},"27":{"title":"设备就绪","titles":["Cordova","事件"]},"28":{"title":"应用挂起","titles":["Cordova","事件"]},"29":{"title":"应用回来","titles":["Cordova","事件"]},"30":{"title":"回退按钮","titles":["Cordova","事件"]},"31":{"title":"菜单按钮","titles":["Cordova","事件"]},"32":{"title":"config.xml","titles":["Cordova"]},"33":{"title":"简介","titles":["Cordova","config.xml"]},"34":{"title":"基本结构","titles":["Cordova","config.xml"]},"35":{"title":"Hybrid","titles":[]},"36":{"title":"webview","titles":["Hybrid"]},"37":{"title":"适用场景","titles":["Hybrid"]},"38":{"title":"实现流程","titles":["Hybrid"]},"39":{"title":"JSBridge","titles":["Hybrid"]},"40":{"title":"schema协议","titles":["Hybrid","JSBridge"]},"41":{"title":"介绍","titles":[]},"42":{"title":"H5+原生混合开发","titles":["介绍"]},"43":{"title":"JavaScript开发+原生渲染","titles":["介绍"]},"44":{"title":"React Native","titles":["介绍","JavaScript开发+原生渲染"]},"45":{"title":"Weex","titles":["介绍","JavaScript开发+原生渲染"]},"46":{"title":"快应用","titles":["介绍","JavaScript开发+原生渲染"]},"47":{"title":"自绘UI+原生","titles":["介绍"]},"48":{"title":"Flutter","titles":["介绍","自绘UI+原生"]},"49":{"title":"移动端离线包方案","titles":[]},"50":{"title":"从流程图分析 hybrid 性能痛点","titles":["移动端离线包方案"]},"51":{"title":"相应优化策略","titles":["移动端离线包方案"]},"52":{"title":"离线包方案","titles":["移动端离线包方案"]},"53":{"title":"离线包服务平台","titles":["移动端离线包方案"]},"54":{"title":"离线包构建能力","titles":["移动端离线包方案"]},"55":{"title":"离线包可用性和使用命中率","titles":["移动端离线包方案"]},"56":{"title":"离线包安全性考量","titles":["移动端离线包方案"]},"57":{"title":"用户流量考量","titles":["移动端离线包方案"]},"58":{"title":"分享","titles":[]},"59":{"title":"技术文章","titles":["分享"]},"60":{"title":"技术分享","titles":["分享"]},"61":{"title":"Hybrid","titles":["分享"]},"62":{"title":"Weex","titles":["分享"]},"63":{"title":"React Native","titles":["分享"]},"64":{"title":"Flutter","titles":["分享"]}},"dirtCount":0,"index":[["有赞flutter热修落地实践",{"2":{"64":1}}],["有赞移动apm实践",{"2":{"60":1}}],["有赞移动质量保障体系",{"2":{"60":1}}],["用vue",{"2":{"64":1}}],["用户流量考量",{"0":{"57":1}}],["用户打开",{"2":{"52":1}}],["西瓜视频flutter落地经验",{"2":{"64":1}}],["西瓜视频android卡顿与anr监控体系建设",{"2":{"60":1}}],["飞猪flutter技术演进及业务改造的实践与思考",{"2":{"64":1}}],["便利蜂reactnative多版本共存的平滑升级实践",{"2":{"63":1}}],["便于移植",{"2":{"1":1}}],["携程大规模应用react+native的工程化实践",{"2":{"63":1}}],["携程无线apm平台建设与实践",{"2":{"60":1}}],["驱动原生型移动应用的跨平台实践",{"2":{"60":1}}],["打造金融级交付能力",{"2":{"60":1}}],["打开一个",{"2":{"50":1}}],["打开",{"2":{"13":1}}],["预加载技术在百度app的应用",{"2":{"60":1}}],["企业微信跨平台开发架构与实践",{"2":{"60":1}}],["面向国际化业务的android组件开发框架",{"2":{"60":1}}],["京东app性能优化及监控能力实战",{"2":{"60":1}}],["百度apptekes研发一体化平台",{"2":{"60":1}}],["百度app移动端⼯程能⼒演进及tekes研发⼀体化平台",{"2":{"60":1}}],["火山引擎客户端性能优化最佳实践",{"2":{"60":1}}],["贝壳移动端监控建设",{"2":{"60":1}}],["贝壳ab测试平台建设实践",{"2":{"60":1}}],["广发对公业务移动平台生态建设实践",{"2":{"60":1}}],["广义的骨架屏甚至可以包括",{"2":{"51":1}}],["大型金融机构移动应用安全建设实践",{"2":{"60":1}}],["轻量化",{"2":{"60":1}}],["分析实践",{"2":{"60":1}}],["分享",{"0":{"58":1},"1":{"59":1,"60":1,"61":1,"62":1,"63":1,"64":1}}],["腾讯超级app框架智慧化开发运营实践",{"2":{"60":1}}],["基于flutter高性能web渲染引擎kraken的实践与思考",{"2":{"64":1}}],["基于flutter的web渲染引擎",{"2":{"64":1}}],["基于html5开发高性能跨平台app",{"2":{"61":1}}],["基于android",{"2":{"60":1}}],["基于云端真机的无线调试解决方案",{"2":{"60":1}}],["基本上都是参考cordova衍生出的混合开发框架",{"2":{"42":1}}],["基本结构",{"0":{"34":1}}],["移动研发的进阶之路",{"2":{"62":1}}],["移动研发平台emas",{"2":{"60":1}}],["移动开发平台高可用架构实践与应用",{"2":{"60":1}}],["移动app持续交付之路",{"2":{"60":1}}],["移动app研发加速",{"2":{"60":1}}],["移动web开发调试",{"2":{"60":1}}],["移动平台化在中通的落地实践",{"2":{"60":1}}],["移动端离线包方案",{"0":{"49":1},"1":{"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1}}],["移动端原生技术需要配备",{"2":{"41":1}}],["爱奇艺app中台实践",{"2":{"60":1}}],["爱奇艺等知名移动应用等",{"2":{"42":1}}],["快速app开发及问题解决平台实践",{"2":{"60":1}}],["快手android编译优化",{"2":{"60":1}}],["快手生产工具链中台化实践",{"2":{"60":1}}],["快手移动端线上质量监控",{"2":{"60":1}}],["快手稳定性体系建设",{"2":{"60":1}}],["快手前端h5容器中台化实践",{"2":{"60":1}}],["快应用才能在保证性能的同时做到快速分发",{"2":{"46":1}}],["快应用自身不支持vue或react语法",{"2":{"46":1}}],["快应用是华为",{"2":{"46":1}}],["快应用",{"0":{"46":1},"2":{"41":1}}],["字节跳动移动端自动化实践",{"2":{"60":1}}],["字节跳动移动研发平台搭建",{"2":{"60":1}}],["字节跳动客户端性能优化最佳实践",{"2":{"60":1}}],["字节到渲染内容到屏幕上的流程",{"2":{"51":1}}],["阿里巴巴移动端研发支撑平台演进与实践",{"2":{"60":1}}],["阿里跨端技术演进中的实践与思考",{"2":{"60":1}}],["阿里架构专家",{"2":{"59":1}}],["阿里的weex",{"2":{"43":1}}],["转转离线包设计实践",{"2":{"59":1}}],["转转hybrid离线包治理与优化实践",{"2":{"59":1}}],["转转hybrid体系建设",{"2":{"59":1}}],["见微知著",{"2":{"59":1}}],["通信的那点事儿",{"2":{"59":1}}],["通过在不同平台实现一个统一接口的渲染引擎来绘制ui",{"2":{"47":1}}],["通过原生的网页加载控件webview",{"2":{"42":1}}],["通过",{"2":{"0":1}}],["支付宝移动化",{"2":{"60":1}}],["支付宝移动端日志采集",{"2":{"60":1}}],["支付宝移动端",{"2":{"59":1}}],["支付宝无线效率工具建设",{"2":{"60":1}}],["支付宝app的hybrid架构方案原理与实践",{"2":{"59":1}}],["支持热更新",{"2":{"43":1}}],["长安汽车移动应用前端架构探索",{"2":{"59":1}}],["架构的演进之路",{"2":{"59":1}}],["架构图",{"0":{"4":1}}],["得到",{"2":{"59":1}}],["远程调试的前世今生",{"2":{"59":1}}],["否则会干扰正常的数据统计",{"2":{"57":1}}],["否则可能都看不到这个界⾯",{"2":{"13":1}}],["数据曝光等埋点上报的",{"2":{"57":1}}],["数据打点策略有冲突",{"2":{"57":1}}],["数据预取",{"2":{"51":1}}],["策略",{"2":{"57":1}}],["策略的很好补充",{"2":{"55":1}}],["耗时",{"2":{"57":1}}],["且离线包核心静态资源也可以整体提前加载进内存",{"2":{"57":1}}],["且",{"2":{"57":1}}],["且存在发版周期限制",{"2":{"41":1}}],["压缩包修改内容",{"2":{"57":1}}],["压缩包压缩登记",{"2":{"57":1}}],["生成",{"2":{"57":1}}],["二进制差量算法工具包",{"2":{"57":1}}],["具体策略可以使用",{"2":{"57":1}}],["具有更大权限",{"2":{"39":1}}],["值进行增量更新",{"2":{"57":1}}],["值得一提的是",{"2":{"48":1}}],["值得一提的是小程序目前已经可以使用vue语法开发",{"2":{"46":1}}],["资源合并失败",{"2":{"56":1}}],["资源网站",{"0":{"3":1}}],["包的生成具有一定的风险",{"2":{"57":1}}],["包体积因素往往也会受到",{"2":{"57":1}}],["包括但不限于",{"2":{"56":1}}],["包含字型",{"2":{"48":1}}],["机制的",{"2":{"56":1}}],["机制",{"2":{"56":1}}],["观察一部分用户的使用情况",{"2":{"56":1}}],["启动时加载离线包",{"2":{"55":1}}],["导致离线包不可用",{"2":{"55":1}}],["效果会打上折扣",{"2":{"55":1}}],["试想",{"2":{"55":1}}],["插件",{"2":{"54":1}}],["插件⽬录",{"2":{"24":1}}],["能力",{"2":{"54":1}}],["能够有效优化",{"2":{"51":1}}],["能够有效地减少对于静态资源的网络请求时间",{"2":{"51":1}}],["描述了该离线包的关键信息",{"2":{"54":1}}],["文件作为离线包资源的一部分",{"2":{"57":1}}],["文件是否应该作为离线包资源的一部分",{"2":{"57":1}}],["文件",{"2":{"54":1,"57":1}}],["文件进行配置声明",{"2":{"54":1}}],["既然数据请求需要客户端发出",{"2":{"54":1}}],["那么可用离线包的命中率就会降低",{"2":{"55":1}}],["那么离线包资源就需要声明",{"2":{"54":1}}],["那么我们如何构建出一个离线包呢",{"2":{"54":1}}],["那么前端和客户端通信自然而然也会有一种协议来约定",{"2":{"40":1}}],["了解了离线包服务平台",{"2":{"54":1}}],["按照离线版本整体下发资源如下图",{"2":{"53":1}}],["按下菜单按钮",{"2":{"31":1}}],["按下菜单按钮时",{"2":{"31":1}}],["离线服务平台",{"2":{"53":2}}],["离线包渲染后",{"2":{"57":1}}],["离线包资源的核心静态文件可以和图片等富媒体资源文件缓存分离",{"2":{"57":1}}],["离线包解压缩失败",{"2":{"56":1}}],["离线包策略从本质上改变了传统",{"2":{"56":1}}],["离线包安全性考量",{"0":{"56":1}}],["离线包也就迭代频繁",{"2":{"55":1}}],["离线包可用性和使用命中率",{"0":{"55":1}}],["离线包和传统的静态资源会有区别",{"2":{"54":1}}],["离线包构建能力",{"0":{"54":1}}],["离线包的下发方式可以按照各个离线包版本下发",{"2":{"53":1}}],["离线包获取服务",{"2":{"53":1}}],["离线包平台",{"2":{"53":1}}],["离线包服务平台接口超时",{"2":{"56":1}}],["离线包服务平台",{"0":{"53":1}}],["离线包方案为代表的",{"2":{"52":1}}],["离线包方案",{"0":{"52":1}}],["离线包优化策略主要属于通用层优化方案",{"2":{"51":1}}],["离线包是解决性能问题",{"2":{"50":1}}],["此时就可以复用已有静态资源",{"2":{"53":1}}],["此时原生会启动一个",{"2":{"50":1}}],["扁平化增量下发离线资源如下图",{"2":{"53":1}}],["扁平化增量下发",{"2":{"53":1}}],["进行离线包的下载重试",{"2":{"55":1}}],["进行增量下发",{"2":{"53":1}}],["进⾏项⽬构建后",{"2":{"33":1}}],["稳定版本",{"2":{"53":1}}],["获取各个业务离线包的最新",{"2":{"53":1}}],["获取离线包我们可以考虑主动和被动模式",{"2":{"53":1}}],["获取离线包",{"2":{"53":1}}],["服务",{"2":{"53":2}}],["服务端渲染可以直出带有数据的",{"2":{"51":1}}],["服务端渲染",{"2":{"51":1}}],["环节主动请求离线包接口",{"2":{"53":1}}],["环境变量",{"0":{"14":1},"2":{"11":1}}],["环境搭建主要包含如下内容",{"2":{"5":1}}],["环境搭建",{"0":{"5":1,"6":1,"8":1},"1":{"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1},"2":{"5":3}}],["流程",{"2":{"53":1}}],["被动模式则更为智能",{"2":{"53":1}}],["被动模式需要开发者构建出离线包后",{"2":{"53":1}}],["工程化",{"2":{"53":1}}],["手机淘宝hybridapp性能优化实战",{"2":{"61":1}}],["手动上传到离线包平台",{"2":{"53":1}}],["手动流程过多",{"2":{"53":1}}],["手势冲突问题将会变得非常棘手",{"2":{"43":1}}],["手势冲突消歧规则是固定的",{"2":{"43":1}}],["更新周期太慢",{"2":{"53":1}}],["更多详情",{"2":{"31":1}}],["随着客户端发版进行更新",{"2":{"53":1}}],["第一个问题",{"2":{"53":1}}],["知道",{"2":{"52":1}}],["完成页面的渲染",{"2":{"52":1}}],["加载前端页面",{"2":{"52":1}}],["加载内容",{"2":{"34":1}}],["则走离线包流程",{"2":{"52":1}}],["则走在线逻辑",{"2":{"52":1}}],["则说明环境变量配置成功",{"2":{"12":1}}],["判断离线包是否可用",{"2":{"52":1}}],["各个团队可能在实现思路的细节上有所不同",{"2":{"52":1}}],["各个方向能够做的优化",{"2":{"51":1}}],["换句话说",{"2":{"52":1}}],["模版",{"2":{"52":1}}],["模拟器启动",{"2":{"23":1}}],["模拟器",{"2":{"17":1}}],["现在该技术已经并不新鲜了",{"2":{"52":1}}],["现在很多app都用这种模式去开发",{"2":{"42":1}}],["总之",{"2":{"52":1}}],["总共有两个内容",{"2":{"13":1}}],["很多方案也将",{"2":{"57":1}}],["很多团队已经将离线包方案落地并成熟发展了",{"2":{"52":1}}],["很多jsbridge的实现都是基于",{"2":{"44":1}}],["闪开方案",{"2":{"52":1}}],["秒的",{"2":{"52":1}}],["3",{"2":{"52":1}}],["39",{"2":{"27":2,"28":4,"29":4,"30":4,"31":4}}],["团队提到了",{"2":{"52":1}}],["全球大前端技术大会上",{"2":{"52":1}}],["自动完成离线包构建",{"2":{"53":1}}],["自从",{"2":{"52":1}}],["自绘ui系统一般都会采用aot模式编译其发布包",{"2":{"47":1}}],["自绘ui+原生",{"0":{"47":1},"1":{"48":1},"2":{"41":1}}],["自绘引擎解决的是ui的跨平台问题",{"2":{"47":1}}],["先小流量测试",{"2":{"56":1}}],["先抢跑",{"2":{"51":1}}],["先下载",{"2":{"13":1}}],["小程序化",{"2":{"51":1}}],["小米",{"2":{"46":1}}],["小米审核较快",{"2":{"35":1}}],["充分并行化",{"2":{"51":1}}],["避免使用",{"2":{"51":1}}],["消除阻塞或延迟解析的",{"2":{"51":1}}],["减少磁盘",{"2":{"57":1}}],["减少带宽和存储压力",{"2":{"53":1}}],["减少关键资源的",{"2":{"51":1}}],["减少关键资源的数量",{"2":{"51":1}}],["减少网络",{"2":{"51":1}}],["优酷应用中心研发效能提升实践",{"2":{"60":1}}],["优化关键资源的加载顺序",{"2":{"51":1}}],["优化关键常规方式为",{"2":{"51":1}}],["优势",{"0":{"1":1}}],["合成",{"2":{"51":1}}],["合成为",{"2":{"51":1}}],["根据更改的文件进行文件变更的增量包设计",{"2":{"57":1}}],["根据上图",{"2":{"52":1}}],["根据",{"2":{"51":1}}],["根据其原理性",{"2":{"41":1}}],["与",{"2":{"51":1,"59":1}}],["与react",{"2":{"46":1}}],["解决方案探索与实践",{"2":{"59":1}}],["解析",{"2":{"51":1}}],["解压",{"2":{"15":1}}],["图中主要步骤",{"2":{"51":1}}],["图中以前端",{"2":{"50":1}}],["展现从",{"2":{"51":1}}],["展开",{"2":{"13":1}}],["展开指定版本",{"2":{"13":1}}],["必须先要完成的步骤",{"2":{"51":1}}],["关键路径或关键渲染路径",{"2":{"51":1}}],["关键路径优化",{"2":{"51":1}}],["首屏分屏或按需渲染",{"2":{"51":1}}],["首先请求并加载",{"2":{"50":1}}],["首先经过原生页面路由",{"2":{"50":1}}],["首先",{"2":{"41":1}}],["营造一种",{"2":{"51":1}}],["帮助用户缓解焦虑的心理",{"2":{"51":1}}],["骨架屏",{"2":{"51":1}}],["内容",{"2":{"51":1}}],["内容不同",{"2":{"25":1}}],["渲染",{"2":{"51":1,"54":1}}],["渲染时需要javascript和原生之间通信",{"2":{"43":1}}],["甚至极端一点",{"2":{"51":1}}],["静态资源通过合理的缓存策略",{"2":{"51":1}}],["静态资源缓存",{"2":{"51":1}}],["静态资源瘦身",{"2":{"51":1}}],["静态数据往往来自缓存内容",{"2":{"51":1}}],["静态数据占位",{"2":{"51":1}}],["响应脚本的解析时间等",{"2":{"51":1}}],["或者回退到线上传统机制",{"2":{"56":1}}],["或者占位区块",{"2":{"51":1}}],["或一定时间的间隔",{"2":{"55":1}}],["或实施合理的分割策略",{"2":{"51":1}}],["或wkwebview",{"2":{"42":1}}],["达到更好的",{"2":{"50":1}}],["切换到",{"2":{"50":1}}],["单一一个阶段我们都有多种优化方法",{"2":{"50":1}}],["整体离线包服务平台我们可以抽象为下图",{"2":{"53":1}}],["整体来说",{"2":{"5":1}}],["整个流程简单清晰",{"2":{"52":1}}],["整个路径分成了两大路径",{"2":{"50":1}}],["发送数据请求",{"2":{"50":1}}],["接下来",{"2":{"52":1}}],["接下来我们就一一分析",{"2":{"52":1}}],["接下来我们进入离线包的设计环节",{"2":{"51":1}}],["接下来我们再看看客户端层面容器层的优化方案",{"2":{"51":1}}],["接着以",{"2":{"50":1}}],["接着就是一个正常的前端加载并渲染页面的流程了",{"2":{"50":1}}],["接口",{"2":{"48":1}}],["识别到",{"2":{"50":1}}],["页面加载和渲染流程技术较为激进的弊端",{"2":{"56":1}}],["页面加载渲染足够快",{"2":{"51":1}}],["页面时",{"2":{"50":1}}],["页面",{"2":{"50":2,"52":1}}],["页面的流程图来分析",{"2":{"50":1}}],["页面的性能一直较为复杂",{"2":{"50":1}}],["页面性能具有一定特殊性",{"2":{"50":1}}],["页面可用性的重要方案",{"2":{"50":1}}],["从react到reactnative渐进强化应用体验",{"2":{"63":1}}],["从一个原生页面点击按钮",{"2":{"50":1}}],["从流程图分析",{"0":{"50":1}}],["从原理上来讲",{"2":{"46":1}}],["时",{"2":{"48":1,"56":1,"57":1}}],["坐标转换",{"2":{"48":1}}],["相对应的",{"2":{"55":1}}],["相信你并不陌生",{"2":{"51":1}}],["相应优化策略",{"0":{"51":1}}],["相反",{"2":{"48":1}}],["相当于",{"2":{"27":1}}],["一种思路是可以在客户端内根据",{"2":{"57":1}}],["一般可以设计灰度发布状态",{"2":{"56":1}}],["一般在下发离线包时",{"2":{"55":1}}],["一般的做法可以考虑设计重试机制和定时轮询",{"2":{"55":1}}],["一般这里可以放置首屏关键请求",{"2":{"54":1}}],["一般使用",{"2":{"39":1}}],["一个",{"2":{"59":1}}],["一个描述这个离线包的",{"2":{"54":1}}],["一个更合理的方式是实现",{"2":{"53":1}}],["一套代码同时运行在",{"2":{"48":1}}],["高德地图app架构演化与实践",{"2":{"60":1}}],["高扩展性的移动金融架构实践",{"2":{"60":1}}],["高性能webf渲染",{"2":{"64":1}}],["高性能",{"2":{"48":1}}],["高保真",{"2":{"48":1}}],["动态化weex的搭建体系",{"2":{"62":1}}],["动态化较好",{"2":{"43":1}}],["动态性不足",{"2":{"47":1}}],["另一种方案是只缓存",{"2":{"57":1}}],["另一种拦截",{"2":{"39":1}}],["另一个思路是利用",{"2":{"57":1}}],["另外我们也可以在具体文件内容层面进行",{"2":{"57":1}}],["另外定时轮询机制能够定时去离线包服务平台拉取最新版本的离线包",{"2":{"55":1}}],["另外",{"2":{"47":1,"56":1,"57":1}}],["也可以由开发者手动维护该字段",{"2":{"54":1}}],["也可以将离线包内静态资源完全扁平化",{"2":{"53":1}}],["也必须将skia一起打包",{"2":{"48":1}}],["也不使用操作系统的原生控件",{"2":{"48":1}}],["也就不会受原生布局系统的限制",{"2":{"47":1}}],["也就不需要根据不同平台的控件单独维护一套组件库",{"2":{"47":1}}],["也要安装对应的版本",{"2":{"22":1}}],["组件显示外观可以做到高保真和高一致性",{"2":{"47":1}}],["组件库易维护",{"2":{"47":1}}],["组件⼤⼩约",{"2":{"13":1}}],["灵活",{"2":{"47":1}}],["性能提升30",{"2":{"59":1}}],["性能痛点",{"0":{"50":1}}],["性能高",{"2":{"47":1}}],["性能相比h5提高很多",{"2":{"43":1}}],["依然要涉及原生开发",{"2":{"47":1}}],["依赖",{"2":{"7":1}}],["正因如此",{"2":{"46":1}}],["正常来说",{"2":{"13":1}}],["排版引擎是集成到rom中的",{"2":{"46":1}}],["排版引擎是集成到框架中的",{"2":{"46":1}}],["每一个app都需要打包一份",{"2":{"46":1}}],["每个cordova",{"2":{"24":1}}],["目标直指微信小程序",{"2":{"46":1}}],["目前主流方案中",{"2":{"57":1}}],["目前google",{"2":{"48":1}}],["目前支持ios和android两个平台",{"2":{"44":1}}],["目前的主流跨平台方案",{"2":{"41":1}}],["魅族等国内9大主流手机厂商共同制定的轻量级应用标准",{"2":{"46":1}}],["最终交给",{"2":{"52":1}}],["最终完成页面内容的加载和渲染",{"2":{"50":1}}],["最大的不同是语法层面",{"2":{"45":1}}],["最早的实践就是通过",{"2":{"36":1}}],["思想及原理和react",{"2":{"45":1}}],["布局消息传递",{"2":{"44":1}}],["作为开发语言的框架那样动态下发代码",{"2":{"47":1}}],["作用和jsbridge一样",{"2":{"44":1}}],["作者",{"2":{"34":1}}],["为此",{"2":{"55":1}}],["为起点",{"2":{"50":1}}],["为了减少每次下载或更新离线包时对流量的消耗",{"2":{"57":1}}],["为了减少网络因素导致的失败",{"2":{"55":1}}],["为了防止移动运营商的劫持",{"2":{"55":1}}],["为了保证ui绘制性能",{"2":{"47":1}}],["为了提⾼下载速度",{"2":{"6":1}}],["为javascript提供运行环境",{"2":{"44":1}}],["映射为原生控件树",{"2":{"44":1}}],["类似于html的jsx",{"2":{"44":1}}],["除此之外",{"2":{"43":1}}],["执行效率和aot代码仍有差距",{"2":{"43":1}}],["执行时需要jit",{"2":{"43":1}}],["执⾏下载",{"2":{"13":1}}],["上面优化相关内容",{"2":{"51":1}}],["上手快",{"2":{"43":1}}],["上它都能跑",{"2":{"36":1}}],["社区控件可能会滞后",{"2":{"43":1}}],["社区庞大",{"2":{"43":1}}],["社区及资源丰富",{"2":{"42":1}}],["采用web开发技术栈",{"2":{"43":1}}],["采用混合模式开发的app我们称之为混合应用或hybrid",{"2":{"42":1}}],["以上",{"2":{"59":1}}],["以来",{"2":{"52":1}}],["以此提升性能",{"2":{"51":1}}],["以及点阵图都有高效能且简洁的表现",{"2":{"48":1}}],["以及css来开发移动应用",{"2":{"44":1}}],["以及最新推出的快应用",{"2":{"43":1}}],["以文件形式存储在app中",{"2":{"38":1}}],["当然你也可以做到服务端主动推送离线包",{"2":{"55":1}}],["当然初期实现",{"2":{"54":1}}],["当然也有缺点如下",{"2":{"43":1}}],["当然也有未开源的美团的picasso",{"2":{"43":1}}],["当前应⽤由后台切换到前台时",{"2":{"29":1}}],["当前应⽤切换到后台时",{"2":{"28":1}}],["缺点是性能不好",{"2":{"42":1}}],["使用react构建flutter应用",{"2":{"64":1}}],["使用flutter快速构建集美观与高性能于一体的移动应用",{"2":{"64":1}}],["使用离线包之后是否会对现有的",{"2":{"57":1}}],["使用增量",{"2":{"56":1}}],["使用web技术栈就可以开发",{"2":{"42":1}}],["使得页面能够更迅速地呈现内容",{"2":{"51":1}}],["使⽤⾮官⽅模拟器不需要安装此组件",{"2":{"13":1}}],["使⽤之前",{"2":{"13":1}}],["混合应用的优点是动态内容是h5",{"2":{"42":1}}],["主打跨平台",{"2":{"48":1}}],["主要负责javascript与原生之间传递调用消息",{"2":{"42":1}}],["主配置⽂件",{"2":{"24":1}}],["都需要原生去做",{"2":{"42":1}}],["而",{"2":{"57":1}}],["而今天的主题",{"2":{"51":1}}],["而不是在首次加载渲染时就一并完成",{"2":{"51":1}}],["而不依赖系统原生控件",{"2":{"47":1}}],["而且也可以避免对原生控件依赖而带来的限制及高昂的维护成本",{"2":{"48":1}}],["而快应用渲染",{"2":{"46":1}}],["而weex则使用vue",{"2":{"45":1}}],["而webview实质上就是一个浏览器内核",{"2":{"42":1}}],["而rn中将虚拟dom映射为原生控件的过程中分两步",{"2":{"44":1}}],["而rn中虚拟dom会通过",{"2":{"44":1}}],["而消息的传递必须遵守一个标准的协议",{"2":{"42":1}}],["而混合框架一般都会在原生代码中预先实现一些访问系统能力的api",{"2":{"42":1}}],["而混合开发中",{"2":{"42":1}}],["由客户端进行签名校验",{"2":{"55":1}}],["由客户端发出这些请求并由",{"2":{"54":1}}],["由客户端完成数据请求并渲染",{"2":{"52":1}}],["由",{"2":{"52":1,"53":1}}],["由前端页面加载渲染页面的流程",{"2":{"52":1}}],["由上述流程我们可以总结出",{"2":{"51":1}}],["由于android系统已经内置了skia",{"2":{"48":1}}],["由于不依赖原生控件",{"2":{"47":1}}],["由于组件库是同一套代码",{"2":{"47":1}}],["由于ui渲染不依赖原生控件",{"2":{"47":1}}],["由于自绘引擎是直接调用系统api来绘制ui",{"2":{"47":1}}],["由于react",{"2":{"44":1}}],["由于渲染依赖原生控件",{"2":{"43":1}}],["由于原生开发可以访问平台所有功能",{"2":{"42":1}}],["由于h5代码只需要一次开发",{"2":{"42":1}}],["由原生平台做出响应",{"2":{"39":1}}],["来获取dataapi字段内容",{"2":{"54":1}}],["来加载",{"2":{"42":1}}],["来⾃于",{"2":{"25":1}}],["像dcloud",{"2":{"42":1}}],["供开发者使用",{"2":{"42":1}}],["国内也有很多公司使用hybrid模式去开发平台",{"2":{"42":1}}],["国内android像华为",{"2":{"35":1}}],["美团外卖flutter容器化生态建设实践",{"2":{"64":1}}],["美团客户端动态化实践",{"2":{"60":1}}],["美团",{"2":{"42":1}}],["淘宝开放技术的思考与演进",{"2":{"60":1}}],["淘宝",{"2":{"42":1}}],["常见的有微信",{"2":{"42":1}}],["微信小程序",{"2":{"41":1}}],["微信小程序和flutter等",{"2":{"41":1}}],["较早",{"2":{"41":1}}],["出道",{"2":{"41":1}}],["原生控件渲染",{"2":{"46":1}}],["原生根据布局信息通过对应的原生控件渲染控件树",{"2":{"44":1}}],["原生渲染",{"2":{"43":1}}],["原生跨平台技术虽然",{"2":{"41":1}}],["原理很简单",{"2":{"39":1}}],["两套团队和技术栈",{"2":{"41":1}}],["究其原因有二",{"2":{"41":1}}],["介绍",{"0":{"41":1},"1":{"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1}}],["前面提到过",{"2":{"51":1}}],["前后端通信依赖于http协议",{"2":{"40":1}}],["前端依然可以由",{"2":{"54":1}}],["前端渲染架构我们可以从",{"2":{"50":1}}],["前端阶段",{"2":{"50":1}}],["前端和客户端通信传递参数和callback的这种方式",{"2":{"40":1}}],["前端通过发送定义好的",{"2":{"39":1}}],["前端调用原生能力主要有两种方式",{"2":{"39":1}}],["前端做好静态页面",{"2":{"38":1}}],["直接执行",{"2":{"39":1}}],["故而原生平台可以通过",{"2":{"39":1}}],["实际情况中",{"2":{"56":1}}],["实际上是",{"2":{"39":1}}],["实现起来也很简单",{"2":{"39":1}}],["实现流程",{"0":{"38":1}}],["实现应⽤",{"2":{"0":1}}],["该页面需要哪些数据请求",{"2":{"54":1}}],["该页面需要请求哪些业务数据",{"2":{"52":1}}],["该服务用于提供离线包资源",{"2":{"53":1}}],["该服务用于提供离线包状态的查询",{"2":{"53":1}}],["该平台需要完成以下任务",{"2":{"53":1}}],["该方案的提出可以追溯到更早的时间",{"2":{"52":1}}],["该请求被原生平台拦截后",{"2":{"39":1}}],["该⽂件会被复制到平台的⼦⽬录下",{"2":{"33":1}}],["就是客户端版本的",{"2":{"52":1}}],["就能同时在android和ios两个平台运行",{"2":{"42":1}}],["就更加简单了",{"2":{"39":1}}],["就很熟悉",{"2":{"1":1}}],["对于expectedfiles字段声明的资源",{"2":{"54":1}}],["对于关键渲染路径的优化",{"2":{"51":1}}],["对于复杂用户界面或动画",{"2":{"42":1}}],["对于h5不能实现的功能",{"2":{"42":1}}],["对象",{"2":{"39":1}}],["对前端友好",{"2":{"1":1}}],["向",{"2":{"39":1}}],["提供一个",{"2":{"53":2}}],["提供离线包查询服务",{"2":{"53":1}}],["提供的接口",{"2":{"39":1}}],["提升",{"2":{"50":1}}],["提示需要登陆",{"2":{"10":1}}],["其核心思路是",{"2":{"52":1}}],["其本质都是",{"2":{"51":1}}],["其本质和前端和后端发送http请求类似",{"2":{"40":1}}],["其中小程序化能够充分利用客户端开发的性能优势",{"2":{"51":1}}],["其实已经被前面几点有所囊括了",{"2":{"51":1}}],["其实就是原生平台通过",{"2":{"39":1}}],["其开发框架和微信小程序很像",{"2":{"46":1}}],["其采用原生javascript开发",{"2":{"46":1}}],["其控件系统也会受到原生ui系统限制",{"2":{"43":1}}],["其javascript依然运行在一个权限受限的沙箱中",{"2":{"42":1}}],["其次",{"2":{"41":1}}],["其次体验也十分流畅",{"2":{"35":1}}],["拦截",{"2":{"39":1}}],["注意",{"2":{"47":1}}],["注意平台版本",{"2":{"22":1}}],["注入相关方案和数据",{"2":{"39":1}}],["注入",{"2":{"39":2}}],["方式为例",{"2":{"50":1}}],["方法有",{"2":{"39":1}}],["方案算是最古老",{"2":{"36":1}}],["调用",{"2":{"39":3}}],["引擎",{"2":{"39":1}}],["引⽤名称",{"2":{"34":1}}],["比如dataapi表明业务所需要的数据接口",{"2":{"54":1}}],["比如某次离线包版本构建过程中",{"2":{"53":1}}],["比如对于",{"2":{"50":1}}],["比如",{"2":{"39":1,"53":1,"57":1}}],["传递参数和回调函数",{"2":{"39":1}}],["于是",{"2":{"39":1}}],["于是有的人开玩笑",{"2":{"36":1}}],["容器加载",{"2":{"52":1}}],["容器预热和数据预取也是常规通用优化手段",{"2":{"51":1}}],["容器预热",{"2":{"51":1}}],["容器池",{"2":{"50":1}}],["容器的启动",{"2":{"50":1}}],["容器",{"2":{"39":1,"50":2}}],["系统上运行",{"2":{"39":1}}],["系统难以统一",{"2":{"36":1}}],["客户端发送数据请求",{"2":{"54":1}}],["客户端以此判断是否可以应用本地离线包资源",{"2":{"53":1}}],["客户端查询该服务",{"2":{"53":1}}],["客户端如何",{"2":{"52":1}}],["客户端将执行权和必要数据交给前端",{"2":{"52":1}}],["客户端并行加载本地模版",{"2":{"52":1}}],["客户端并行请求业务数据接口",{"2":{"52":1}}],["客户端启动",{"2":{"52":1}}],["客户端提前下载好",{"2":{"52":1}}],["客户端可以提前启动",{"2":{"50":1}}],["客户端阶段",{"2":{"50":1}}],["客户端在一个webview中使用file协议加载静态页面",{"2":{"38":1}}],["客户端拿到前端静态页面",{"2":{"38":1}}],["反馈等页面",{"2":{"37":1}}],["体验无要求",{"2":{"37":1}}],["体验要求高",{"2":{"37":1}}],["体验要求极致",{"2":{"37":1}}],["变化频繁",{"2":{"37":1}}],["变化不频繁",{"2":{"37":1}}],["适用场景",{"0":{"37":1}}],["但影响",{"2":{"57":1}}],["但有几个主要环节需要我们思考",{"2":{"52":1}}],["但主要流程基本如下图",{"2":{"52":1}}],["但与主题不相关",{"2":{"51":1}}],["但ios系统并未内置skia",{"2":{"48":1}}],["但始终热点不断",{"2":{"41":1}}],["但也是最成熟",{"2":{"36":1}}],["但是该方案成本较高",{"2":{"55":1}}],["但是这样做的问题非常明显",{"2":{"53":1}}],["但是flutter也有不足之处",{"2":{"48":1}}],["但是各方案都难以做到完美",{"2":{"41":1}}],["但是对于一个真正意义上的跨平台应用来说",{"2":{"39":1}}],["但是它们都对",{"2":{"36":1}}],["但是hybrid就能解决这个问题",{"2":{"35":1}}],["因此离线包就需要有一个",{"2":{"54":1}}],["因此针对",{"2":{"50":1}}],["因此熟悉web前端开发的技术人员只需很少的学习就可以进入移动应用开发领域",{"2":{"44":1}}],["因此也没有大一统的技术垄断",{"2":{"41":1}}],["因此",{"2":{"36":1,"39":1}}],["因为页面采用前端来开发",{"2":{"35":1}}],["因为",{"2":{"13":1,"39":1}}],["月球",{"2":{"36":1}}],["连",{"2":{"36":1}}],["还需要使用在线策略",{"2":{"57":1}}],["还需要做到h5",{"2":{"39":1}}],["还有些优化打磨手段值得一提",{"2":{"57":1}}],["还要建立健全的",{"2":{"56":1}}],["还是其他平台",{"2":{"36":1}}],["还不⽀持",{"2":{"2":1}}],["虽然",{"2":{"36":1}}],["事实上",{"2":{"36":1,"44":1,"52":1}}],["事件",{"0":{"26":1},"1":{"27":1,"28":1,"29":1,"30":1,"31":1},"2":{"27":1,"28":1,"29":1,"30":1,"31":1}}],["代码是运行在一个单独的",{"2":{"39":1}}],["代码",{"2":{"36":1,"39":1}}],["即在全量铺开某离线包前",{"2":{"56":1}}],["即检查离线包文件是否被篡改过",{"2":{"55":1}}],["即正常的",{"2":{"52":1}}],["即可在多个平台上使用",{"2":{"44":1}}],["即",{"2":{"39":1,"51":1}}],["即一个小型的浏览器内核",{"2":{"36":1}}],["即前端和客户端的混合开发",{"2":{"35":1}}],["它也是采用javascript语言开发",{"2":{"46":1}}],["它也是混合开发框架的核心",{"2":{"42":1}}],["它们的易用性和功能性都非常强大",{"2":{"45":1}}],["它在react",{"2":{"44":1}}],["它规定了消息的格式与含义",{"2":{"42":1}}],["它主要用于加载h5页面",{"2":{"36":1}}],["它是客户端和前端的衔接之处",{"2":{"50":1}}],["它是",{"2":{"27":1}}],["双端运行",{"2":{"36":1}}],["双端公用一套代码",{"2":{"35":1}}],["双击安装包",{"2":{"11":1}}],["所以构建ipa时",{"2":{"48":1}}],["所以flutter在打包apk",{"2":{"48":1}}],["所以应用发布后",{"2":{"47":1}}],["所以在不同平台",{"2":{"47":1}}],["所以代码容易维护",{"2":{"47":1}}],["所以性能和原生控件接近",{"2":{"47":1}}],["所以性能会比混合应用中h5好很多",{"2":{"44":1}}],["所以可以做到不同平台ui的一致性",{"2":{"47":1}}],["所以",{"2":{"42":1}}],["所以对于大多数系统能力都没有访问权限",{"2":{"42":1}}],["所以使用原生开发想要快速上线是不可能的",{"2":{"35":1}}],["所以安装过程会很缓慢",{"2":{"13":1}}],["无需app审核",{"2":{"35":1}}],["某些环节也可能涉及到server端",{"2":{"35":1}}],["某些平台上的",{"2":{"2":1}}],["针对",{"2":{"34":2}}],["访问限制",{"2":{"34":1}}],["菜单按钮",{"0":{"31":1}}],["回退按钮",{"0":{"30":1},"2":{"30":1}}],["触发",{"2":{"28":1,"29":1,"30":1,"31":1}}],["应用中",{"2":{"59":1}}],["应用中无需打包",{"2":{"46":1}}],["应用最为广泛的技术",{"2":{"36":1}}],["应用回来",{"0":{"29":1}}],["应用挂起",{"0":{"28":1}}],["应⽤描述",{"2":{"34":1}}],["应⽤程序的全局配置⽂件",{"2":{"33":1}}],["应⽤程序的⽬录名称",{"2":{"21":1}}],["应⽤程序代码中可以添加这些事件的监听",{"2":{"26":1}}],["应⽤图标和启动⻚⾯",{"2":{"24":1}}],["应⽤的标题",{"2":{"21":1}}],["应⽤⽐原⽣应⽤慢",{"2":{"2":1}}],["应⽤不能使⽤移动端功能",{"2":{"0":1}}],["应⽤移植到移动端",{"2":{"0":1}}],["函数中",{"2":{"27":1}}],["fallback",{"2":{"56":2}}],["false",{"2":{"27":1}}],["fcp",{"2":{"50":1,"51":1}}],["fmp",{"2":{"50":1,"51":1}}],["flutter在字节跳动的应用实践",{"2":{"64":1}}],["flutter在字节跳动的现状与工程实践",{"2":{"64":1}}],["flutter在腾讯企鹅辅导上的实践之路",{"2":{"64":1}}],["flutter在贝壳接入实践",{"2":{"64":1}}],["flutter内存监控",{"2":{"64":1}}],["flutter跨平台开发框架",{"2":{"64":1}}],["flutter技术解析与实战大公开",{"2":{"64":1}}],["flutter使用skia作为其2d渲染引擎",{"2":{"48":1}}],["flutter使用自己的高性能渲染引擎来绘制widget",{"2":{"48":1}}],["flutter既不使用webview",{"2":{"48":1}}],["flutter添加原生扩展",{"2":{"48":1}}],["flutter提供了丰富的组件",{"2":{"48":1}}],["flutter",{"0":{"48":1,"64":1},"2":{"41":1,"48":1}}],["function",{"2":{"27":1,"28":1,"29":1,"30":1,"31":1}}],["finish",{"2":{"13":1}}],["files",{"2":{"11":1,"15":2}}],["firefox",{"2":{"1":1}}],["fireos",{"2":{"1":1}}],["⻚⾯中的",{"2":{"27":1}}],["并设定",{"2":{"55":1}}],["并内置在应用包中",{"2":{"53":1}}],["并完成绘制",{"2":{"51":1}}],["并行解析",{"2":{"51":1}}],["并构建",{"2":{"51":2}}],["并在数据请求成功后再加载真实数据的做法",{"2":{"51":1}}],["并由",{"2":{"50":1}}],["并提供了非常友好的api",{"2":{"48":1}}],["并且当系统更新时",{"2":{"43":1}}],["并将相关数据放在请求体中",{"2":{"39":1}}],["并不是一件难事儿",{"2":{"39":1}}],["并可以访问的信号",{"2":{"27":1}}],["并确保他们保存在了",{"2":{"22":1}}],["准备好",{"2":{"27":1}}],["设计与实现",{"2":{"59":1}}],["设备重新回来",{"2":{"29":1}}],["设备挂起",{"2":{"28":1}}],["设备",{"2":{"27":1}}],["设备就绪后的其他逻辑代码",{"2":{"27":1}}],["设备就绪",{"0":{"27":1}}],["设置",{"0":{"14":1},"2":{"11":1}}],["设置为淘宝的",{"2":{"6":1}}],["给我们提供了很多的事件",{"2":{"26":1}}],["运⾏",{"2":{"25":1}}],["运行",{"0":{"23":1}}],["⽽是构建之后⽬录下的",{"2":{"25":1}}],["⽽后⼜切换到",{"2":{"15":1}}],["到各个平台⼯程的",{"2":{"24":1}}],["源码会被",{"2":{"24":1}}],["源代码⽬录",{"2":{"24":1}}],["等构建工具打包完成",{"2":{"54":1}}],["等指标",{"2":{"51":1}}],["等时间",{"2":{"50":1}}],["等静态资源进行充分压缩",{"2":{"51":1}}],["等静态资源",{"2":{"50":1}}],["等",{"2":{"24":1,"39":1}}],["⽐如",{"2":{"24":2}}],["命令都可以定义",{"2":{"24":1}}],["命令⾏⼯具",{"2":{"7":1}}],["钩⼦⽬录",{"2":{"24":1}}],["项⽬⽬录",{"2":{"25":2}}],["项⽬使⽤了哪些插件",{"2":{"24":1}}],["项⽬唯⼀标识",{"2":{"21":1}}],["项目目录",{"0":{"24":1}}],["expectedfiles字段表明了该业务所需的离线包资源",{"2":{"54":1}}],["expectedfiles",{"2":{"54":1}}],["events",{"2":{"31":2}}],["en",{"2":{"31":1}}],["emulate",{"2":{"23":1}}],["electron",{"2":{"22":1}}],["真机调试",{"2":{"23":1}}],["^7",{"2":{"22":1}}],["^1",{"2":{"22":1}}],["^6",{"2":{"22":1}}],["将离线包推送到离线平台",{"2":{"53":1}}],["将",{"2":{"51":2}}],["将虚拟dom布局信息传递给原生",{"2":{"44":1}}],["将文件交给客户端",{"2":{"38":1}}],["将来安装模拟器时",{"2":{"22":1}}],["将加压包放到任意位置",{"2":{"15":1}}],["查看当前平台",{"2":{"22":1}}],["查看镜像源",{"2":{"6":1}}],["添加",{"2":{"22":1}}],["添加平台",{"0":{"22":1}}],["安卓端运⾏",{"2":{"23":1}}],["安卓",{"2":{"22":1}}],["安装包体积小",{"2":{"46":1}}],["安装包体积较大",{"2":{"46":1}}],["安装的插件会放在这⾥",{"2":{"24":1}}],["安装部署⼯具",{"0":{"18":1}}],["安装完成后",{"2":{"17":1}}],["安装后占⽤空间约",{"2":{"13":1}}],["安装之后",{"2":{"6":1}}],["安装",{"0":{"7":1,"11":1,"15":1,"17":1,"20":1},"2":{"5":1,"13":1}}],["浏览器端运⾏",{"2":{"23":1}}],["浏览器",{"2":{"22":1}}],["创建项目",{"0":{"21":1}}],["初始化项⽬",{"0":{"19":1},"1":{"20":1,"21":1,"22":1,"23":1,"24":1,"25":1}}],["再比如",{"2":{"50":1}}],["再安装",{"2":{"17":1}}],["再次下载即可",{"2":{"13":1}}],["再次下载",{"2":{"13":1}}],["bundle的动态化方案探索",{"2":{"60":1}}],["build",{"2":{"13":1,"24":2}}],["bsdp",{"2":{"57":1}}],["bsdiff",{"2":{"57":2}}],["bspatch",{"2":{"57":1}}],["bridge",{"2":{"42":1}}],["browser",{"2":{"22":3,"23":1,"24":1,"25":4,"33":1}}],["backbutton",{"2":{"30":2}}],["before",{"2":{"24":2}}],["bin",{"2":{"15":1}}],["绑定环境变量",{"2":{"15":1}}],["说太⾼了",{"2":{"15":1}}],["zip",{"2":{"15":1}}],["58本地服务flutter落地实践",{"2":{"64":1}}],["58到家app从0到1的研发实践与思考",{"2":{"60":1}}],["5",{"2":{"15":4}}],["6",{"2":{"15":5}}],["64",{"2":{"13":1}}],["建议使⽤",{"2":{"15":1}}],["rn使用javascript语言",{"2":{"44":1}}],["render",{"2":{"51":2}}],["reactnative大型项目通用化架构",{"2":{"63":1}}],["reactnative下一代引擎重构介绍",{"2":{"63":1}}],["reactnative实战",{"2":{"63":1}}],["react中虚拟dom最终会映射为浏览器dom树",{"2":{"44":1}}],["react",{"0":{"44":1,"63":1},"2":{"41":2,"44":3,"45":1,"46":1}}],["resource",{"2":{"54":1}}],["res",{"2":{"33":1}}],["resume",{"2":{"29":2}}],["registry",{"2":{"6":3}}],["run",{"2":{"23":2,"25":1}}],["root=c",{"2":{"14":1}}],["layout",{"2":{"51":1}}],["loading",{"2":{"51":1}}],["local",{"2":{"14":2}}],["linux",{"2":{"36":1}}],["lt",{"2":{"25":2,"34":20}}],["lts",{"2":{"6":1}}],["ls",{"2":{"22":1}}],["uv",{"2":{"57":1}}],["uc浏览器客户端容器化框架演进",{"2":{"60":1}}],["uc",{"2":{"52":1}}],["ui外观保真度和一致性高",{"2":{"47":1}}],["url",{"2":{"39":3}}],["users",{"2":{"14":2}}],["ubuntu",{"2":{"1":1}}],["只需维护一份代码",{"2":{"44":1}}],["只需要重复选中所需组件",{"2":{"13":1}}],["只要给一个浏览器",{"2":{"36":1}}],["只要你写过",{"2":{"1":1}}],["⽹络中断报错",{"2":{"13":1}}],["报错",{"2":{"13":1}}],["我本地是",{"2":{"15":1}}],["我本地下载中断",{"2":{"13":1}}],["我之前下载的",{"2":{"15":1}}],["我们前文也提到了增量更新的机制",{"2":{"57":1}}],["我们总结出需要使用",{"2":{"56":1}}],["我们总结基本流程如下",{"2":{"52":1}}],["我们需要从各方面考量离线包的安全性",{"2":{"56":1}}],["我们还需要保证离线包的完整性",{"2":{"55":1}}],["我们借助",{"2":{"54":1}}],["我们以",{"2":{"54":1}}],["我们再思考一个问题",{"2":{"54":1}}],["我们暂且不赘述",{"2":{"51":1}}],["我们结合下图",{"2":{"51":1}}],["我们看上图",{"2":{"50":1}}],["我们从加载一个",{"2":{"50":1}}],["我们把依赖于webview的用于在javascript与原生之间通信并实现了某种消息传输协议的工具称之为webview",{"2":{"42":1}}],["我们称这种h5+原生的开发模式为混合开发",{"2":{"42":1}}],["我们知道",{"2":{"39":1}}],["我们可以设置最大重试次数",{"2":{"55":1}}],["我们可以由开发者手动打出离线包",{"2":{"53":1}}],["我们可以加载一段表意内容的",{"2":{"51":1}}],["我们可以做到以下几个方向的优化",{"2":{"51":1}}],["我们可以从两个方面简要分析",{"2":{"39":1}}],["我们可以先注册",{"2":{"10":1}}],["我们可以认为cordova",{"2":{"0":1}}],["我们将非关键的内容延迟按需渲染",{"2":{"51":1}}],["我们将",{"2":{"6":1}}],["我们",{"2":{"0":1}}],["这些资源一并内置于离线包当中",{"2":{"54":1}}],["这是一个可大可小的话题",{"2":{"53":1}}],["这是在访问一个",{"2":{"50":1}}],["这其实是一种提升用户体验的关键手段",{"2":{"51":1}}],["这也是为什么flutter",{"2":{"48":1}}],["这也可以减小开发成本",{"2":{"42":1}}],["这在使用不同人写的控件嵌套时",{"2":{"43":1}}],["这类开源框架的代表主要是facebook的react",{"2":{"43":1}}],["这类框架主要原理就是将app的一部分需要动态变动的内容通过h5来实现",{"2":{"42":1}}],["这样可以更方便地管理缓存",{"2":{"57":1}}],["这样可以优先保证视口内的内容展现",{"2":{"51":1}}],["这样能够防止离线包下载不及时",{"2":{"55":1}}],["这样在一定程度上能保证首屏页面的直出",{"2":{"50":1}}],["这样在真正访问",{"2":{"50":1}}],["这样不仅可以保证在android和ios上ui的一致性",{"2":{"48":1}}],["这样布局系统会非常灵活",{"2":{"47":1}}],["这样一来",{"2":{"42":1}}],["这样就解决了动态化的需求",{"2":{"42":1}}],["这种手段和静态资源瘦身有一定关系",{"2":{"51":1}}],["这种平台技术的优点如下",{"2":{"47":1}}],["这种模式又称为hybrid开发",{"2":{"42":1}}],["这种协议称为schema协议",{"2":{"40":1}}],["这个独立的上下文和原生能力的交互过程是双向的",{"2":{"39":1}}],["这个下载时间也⽐较⻓",{"2":{"13":1}}],["这⾥你还可以单独安装",{"2":{"13":1}}],["点击回退按钮时",{"2":{"30":1}}],["点击",{"2":{"13":2}}],["9",{"2":{"13":1,"22":2}}],["451",{"2":{"13":1}}],["min",{"2":{"54":1}}],["mpvue",{"2":{"46":1}}],["max",{"2":{"54":1}}],["mac",{"2":{"36":1}}],["market",{"2":{"34":1}}],["manager",{"2":{"13":2}}],["menubutton",{"2":{"31":2}}],["mb",{"2":{"13":2}}],["确保选中了",{"2":{"13":1}}],["确保勾选了下⾯这些组件",{"2":{"13":1}}],["选项",{"2":{"13":1}}],["选项卡",{"2":{"13":2}}],["同程艺龙android平台化架构设计及自动化解决方案",{"2":{"60":1}}],["同一个渲染引擎",{"2":{"47":1}}],["同样勾中右下⻆的",{"2":{"13":1}}],["同时下发文件签名",{"2":{"55":1}}],["同时离线包的下载以及解压过程也可能会出现错误",{"2":{"55":1}}],["同时react",{"2":{"44":1}}],["同时也减少开发和沟通成本",{"2":{"35":1}}],["同时确保翻墙⼯具稳定可⽤",{"2":{"13":1}}],["同时",{"2":{"0":1,"42":1,"55":1}}],["同时⽀持移动端的功能",{"2":{"0":1}}],["官⽅模拟器镜像⽂件",{"2":{"13":1}}],["官⽹下载安装包",{"2":{"6":1}}],["官⽹",{"2":{"3":1}}],["xxx页面",{"2":{"54":1}}],["xxxx",{"2":{"54":2}}],["xxx",{"2":{"54":4}}],["x",{"2":{"31":1}}],["xml",{"0":{"32":1},"1":{"33":1,"34":1},"2":{"22":1,"24":1,"33":5,"34":1}}],["xcode",{"0":{"17":1}}],["x86",{"2":{"13":1}}],["x64",{"2":{"10":1}}],["2020",{"2":{"54":1}}],["2",{"2":{"13":1,"54":3}}],["29",{"2":{"13":2}}],["271",{"2":{"11":1}}],["你的名字",{"2":{"14":2}}],["你必须使⽤稳定的翻墙⼯具",{"2":{"13":1}}],["你可以忽略这⼀步",{"2":{"13":1}}],["重申",{"2":{"13":1}}],["qapmflutter智能监控体系",{"2":{"64":1}}],["qqhybrid的演进",{"2":{"61":1}}],["q",{"2":{"13":1}}],["quot",{"2":{"13":12,"25":2,"34":14,"54":70}}],["15s",{"2":{"55":1}}],["1607070313",{"2":{"54":1}}],["162513",{"2":{"54":1}}],["1实际上",{"2":{"25":1}}],["1这⾥以",{"2":{"25":1}}],["1",{"2":{"15":1,"54":3}}],["113",{"2":{"13":1}}],["10",{"2":{"13":1,"31":1}}],["1204",{"2":{"54":1}}],["123",{"2":{"12":1,"20":1,"33":1}}],["12345其他后续事件",{"2":{"27":1}}],["123456",{"2":{"23":1,"28":1,"29":1,"30":1,"31":1}}],["12345678910111213141516171819上面这个",{"2":{"54":1}}],["12345678910111213141516171819",{"2":{"34":1}}],["12345678910当前平台信息",{"2":{"22":1}}],["12345678",{"2":{"22":1}}],["12345",{"2":{"6":1,"21":1}}],["12",{"2":{"6":1,"18":1}}],["然后暴露给webview以供javascript调用",{"2":{"42":1}}],["然后客户端通过回调函数返回内容",{"2":{"39":1}}],["然后点击",{"2":{"13":1}}],["然后",{"2":{"13":1}}],["中引⼊的",{"2":{"25":1}}],["中",{"2":{"22":1,"39":2}}],["中安装即可",{"2":{"17":1}}],["中选择",{"2":{"13":1}}],["中⽂镜像",{"2":{"3":1}}],["在用户真实访问之前",{"2":{"57":1}}],["在用户交互时",{"2":{"52":1}}],["在发现当前最新版本离线包不可用时",{"2":{"56":1}}],["在离线包下载完成后",{"2":{"55":1}}],["在网络条件允许的情况下",{"2":{"55":1}}],["在每次启动应用时",{"2":{"53":1}}],["在构建成功后",{"2":{"53":1}}],["在前端每次发版上线时",{"2":{"53":1}}],["在前端业务层面上",{"2":{"51":1}}],["在内容渲染完成之前",{"2":{"51":1}}],["在内",{"2":{"51":1}}],["在ios中",{"2":{"44":1}}],["在原生客户端路由阶段",{"2":{"52":1}}],["在原生移动应用平台的衍生产物",{"2":{"44":1}}],["在原生平台中",{"2":{"39":1}}],["在android中",{"2":{"43":1}}],["在app中可以有webview也可以没有",{"2":{"36":1}}],["在有些场景如拖动可能会因为通信频繁导致卡顿",{"2":{"43":1}}],["在更新和升级的时候就涉及到server端",{"2":{"35":1}}],["在执⾏",{"2":{"24":1}}],["在右下⻆勾选",{"2":{"13":1}}],["在",{"2":{"13":1,"17":1,"25":1,"39":1}}],["在菜单",{"2":{"13":1}}],["下面我们再从浏览器的关键渲染步骤来了解",{"2":{"51":1}}],["下找到",{"2":{"13":1}}],["下载后解压",{"2":{"15":1}}],["下载版本",{"2":{"15":1}}],["下载安装内容很多",{"2":{"13":1}}],["下载过程需要翻墙",{"2":{"13":1}}],["下载完成后",{"2":{"11":1,"13":1}}],["下载时",{"2":{"10":1}}],["下载地址",{"2":{"10":1,"13":1,"15":1}}],["下载",{"0":{"10":1},"2":{"15":1}}],["指定版本的",{"2":{"13":1}}],["存在兼容性问题",{"2":{"13":1}}],["默认的反向域值",{"2":{"21":1}}],["默认会安装最新版本的",{"2":{"13":1}}],["默认情况下",{"2":{"0":1}}],["可选",{"2":{"13":1}}],["可以按照业务和团队实际情况进行选型",{"2":{"57":1}}],["可以迅速切到稳定可用的版本",{"2":{"56":1}}],["可以通过编写一个",{"2":{"54":1}}],["可以较大限度地使用离线包资源",{"2":{"53":1}}],["可以绑定前端",{"2":{"53":1}}],["可以静态内置到资源包中",{"2":{"51":1}}],["可以复用已储备好的",{"2":{"50":1}}],["可以分为三大类",{"2":{"41":1}}],["可以是远程的页面也可以使本地的页面",{"2":{"36":1}}],["可以在android和ios的webview上运行",{"2":{"35":1}}],["可以再配置两个路径",{"2":{"11":1}}],["可以使⽤",{"2":{"0":1}}],["ipu亚信艾扑移动应用平台",{"2":{"60":1}}],["id",{"2":{"54":1}}],["import",{"2":{"51":1}}],["image",{"2":{"13":1}}],["icon",{"2":{"51":2}}],["itms",{"2":{"34":2}}],["ionic",{"2":{"41":1}}],["io",{"2":{"21":2,"51":1,"57":1}}],["ios审核较慢",{"2":{"35":1}}],["ios环境搭建",{"0":{"16":1},"1":{"17":1,"18":1}}],["ios",{"2":{"1":1,"5":2,"17":1,"18":2,"24":1,"33":1,"34":2,"36":2,"39":1,"41":1,"42":1,"48":1,"54":1}}],["in",{"2":{"62":1}}],["inoic等",{"2":{"42":1}}],["integrity",{"2":{"54":1}}],["intent",{"2":{"34":3}}],["intel",{"2":{"13":1}}],["install",{"2":{"18":2,"20":1}}],["incorrectly",{"2":{"13":1}}],["index",{"2":{"13":1,"25":1,"54":1}}],["请求",{"2":{"39":1,"50":1}}],["请先添加",{"2":{"25":1}}],["请重复选中以上两个组件",{"2":{"13":1}}],["请略过本节",{"2":{"13":1}}],["请选择⼀个适合本地操作系统的安装包",{"2":{"10":1}}],["如何开发优质hybrid+app",{"2":{"61":1}}],["如何在成熟的android插件技术领域继续创新",{"2":{"60":1}}],["如何保证移动应用的稳定性",{"2":{"60":1}}],["如何生产离线包模版",{"2":{"52":1}}],["如何维护离线包",{"2":{"52":1,"53":1}}],["如何检测离线包版本",{"2":{"52":1,"53":1}}],["如下图",{"2":{"50":1,"51":1}}],["如无法访问文件系统",{"2":{"42":1}}],["如果我们的业务迭代频繁",{"2":{"55":1}}],["如果内置的离线包版本可用",{"2":{"52":1}}],["如果内置的离线包版本不可用或已经落后线上版本",{"2":{"52":1}}],["如果涉及其它系统能力调用",{"2":{"47":1}}],["如果没有添加",{"2":{"25":1}}],["如果下载过程中断",{"2":{"13":1}}],["如果最新的",{"2":{"13":1}}],["如果以下命令可以正常运⾏",{"2":{"12":1}}],["如已经安装",{"2":{"13":1}}],["简单总结一下各阶段",{"2":{"51":1}}],["简单来说",{"2":{"50":1,"53":1}}],["简称rn",{"2":{"44":1}}],["简称",{"2":{"13":1,"42":1}}],["简介",{"0":{"9":1,"33":1}}],["v2",{"2":{"53":1}}],["v1",{"2":{"53":1}}],["vue的语法也可以移植到快应用上",{"2":{"46":1}}],["vue和react堪称前端领域最火的javascript框架",{"2":{"45":1}}],["v",{"2":{"15":1,"20":1}}],["version",{"2":{"12":1,"54":1}}],["vs",{"2":{"5":1}}],["检测安装结果",{"0":{"12":1},"2":{"15":1}}],["后",{"2":{"11":1}}],["配置好",{"2":{"11":1}}],["0",{"2":{"11":1,"13":2,"22":9,"52":1,"54":4}}],["8",{"2":{"11":1,"15":1}}],["pv",{"2":{"57":1}}],["patch",{"2":{"57":2}}],["pause",{"2":{"28":2}}],["package",{"2":{"13":2}}],["prepare",{"2":{"24":1}}],["program",{"2":{"11":1,"15":2}}],["placeholder",{"2":{"51":1}}],["platform",{"2":{"13":1,"22":3,"25":2,"34":4}}],["platforms",{"2":{"13":1,"22":2,"24":1,"33":3}}],["plugins",{"2":{"24":1}}],["peer",{"2":{"13":1}}],["phonegap",{"2":{"41":1}}],["phone",{"2":{"1":1}}],["hummer渲染性能探索与突破",{"2":{"60":1}}],["hummer详解及实战",{"2":{"60":1}}],["hummer系列分享",{"2":{"60":1}}],["hash",{"2":{"57":1}}],["h5加载优化实践",{"2":{"59":1}}],["h5代码是运行在webview中",{"2":{"42":1}}],["h5部分是可以随时改变而不用发版",{"2":{"42":1}}],["h5+原生混合开发",{"0":{"42":1}}],["h5+原生",{"2":{"41":1}}],["h5",{"2":{"37":1,"59":1}}],["hybrid它的优势是可以快速迭代更新",{"2":{"35":1}}],["hybrid即混合",{"2":{"35":1}}],["hybrid",{"0":{"35":1,"50":1,"61":1},"1":{"36":1,"37":1,"38":1,"39":1,"40":1},"2":{"36":1,"37":1,"50":7,"52":1,"56":1,"59":6,"61":1}}],["href=",{"2":{"34":3}}],["host",{"2":{"54":1}}],["hook",{"2":{"24":1}}],["hooks",{"2":{"24":1}}],["home",{"2":{"11":1,"54":1}}],["home=c",{"2":{"11":1,"14":1}}],["hellocordova",{"2":{"21":4,"22":1}}],["http",{"2":{"3":1,"53":2}}],["https",{"2":{"3":2,"6":1,"10":1,"13":1,"15":1,"31":1,"54":2}}],["html",{"2":{"0":1,"1":1,"10":1,"13":1,"25":1,"31":1,"34":1,"38":1,"50":2,"51":3,"52":2,"54":1,"57":3}}],["⽆需特殊配置",{"2":{"11":1}}],["⼀般都写在",{"2":{"27":1}}],["⼀般是点连接的语法",{"2":{"21":1}}],["⼀直下⼀步就好",{"2":{"11":1}}],["⼀套代码",{"2":{"1":1}}],["开始安装",{"2":{"11":1}}],["开发者可以很快地为",{"2":{"48":1}}],["开发者可以通过",{"2":{"48":1}}],["开发成本相对较低",{"2":{"43":1}}],["开发效率上存在天然缺陷",{"2":{"41":1}}],["开发",{"2":{"9":1,"59":1}}],["开发套件的简称",{"2":{"9":1}}],["登陆后再下载",{"2":{"10":1}}],["账户",{"2":{"10":1}}],["操作系统+位数",{"2":{"10":1}}],["diff",{"2":{"56":1,"57":2}}],["distributions",{"2":{"15":1}}],["dataapi",{"2":{"54":1}}],["dart语言开发",{"2":{"48":1}}],["dom",{"2":{"51":2}}],["docs",{"2":{"31":1}}],["document",{"2":{"28":1,"29":1,"30":1,"31":1}}],["down",{"2":{"13":1}}],["downloads",{"2":{"10":1}}],["d",{"2":{"15":2}}],["description",{"2":{"34":2,"54":1}}],["deviceready",{"2":{"27":1}}],["developer",{"2":{"13":1}}],["development",{"2":{"9":1}}],["deploy",{"2":{"18":1}}],["details",{"2":{"13":2}}],["需要提出的是",{"2":{"53":1}}],["需要和客户端发版绑定",{"2":{"53":1}}],["需要前端开发人员和客户端开发人员配合完成",{"2":{"35":1}}],["需要安装",{"2":{"9":1}}],["需要的环境是",{"2":{"5":1}}],["kit",{"2":{"9":1}}],["jdhybrid",{"2":{"59":1}}],["jdk1",{"2":{"11":1}}],["jdk8",{"2":{"10":1}}],["jdk",{"2":{"9":2}}],["jit",{"2":{"47":1}}],["javasriptcore",{"2":{"39":1}}],["javascriptcore",{"2":{"44":3}}],["javascript为脚本语言",{"2":{"43":1}}],["javascript开发+原生渲染的方式主要优点如下",{"2":{"43":1}}],["javascript开发+原生渲染",{"0":{"43":1},"1":{"44":1,"45":1,"46":1},"2":{"41":1}}],["javascript",{"2":{"39":7,"42":1,"50":2,"51":3,"57":1}}],["javase",{"2":{"10":2}}],["javac",{"2":{"12":1}}],["java",{"2":{"9":2,"10":1,"11":4}}],["js构建一个高性能flutter应用",{"2":{"64":1}}],["json",{"2":{"54":4}}],["js作为开发框架",{"2":{"45":2}}],["js和客户端通讯的基本流程就是js访问客户端能力",{"2":{"39":1}}],["jsbridge",{"0":{"39":1},"1":{"40":1},"2":{"39":2,"42":1,"59":1}}],["jsfunction",{"2":{"28":1,"29":1,"30":1,"31":1}}],["jsdocument",{"2":{"27":1}}],["js",{"0":{"6":1,"25":1},"2":{"0":1,"1":1,"5":2,"6":2,"25":6,"38":1,"39":1,"54":3,"57":1}}],["gmm",{"2":{"62":1}}],["gmtc2019",{"2":{"52":1}}],["google推出并开源的移动应用开发框架",{"2":{"48":1}}],["gt",{"2":{"25":2,"34":20}}],["g",{"2":{"18":2,"20":1}}],["gradle",{"0":{"15":1},"2":{"15":4}}],["get",{"2":{"6":1}}],["git",{"0":{"7":1},"2":{"5":1,"7":1,"57":1}}],["github",{"2":{"3":2}}],["验证是否更改成功",{"2":{"6":1}}],["taro+reactnative开发app",{"2":{"63":1}}],["taobao",{"2":{"6":1}}],["true",{"2":{"54":1}}],["tree",{"2":{"51":3}}],["testing",{"2":{"57":1}}],["template",{"2":{"54":1}}],["template1",{"2":{"54":1}}],["technologies",{"2":{"10":1}}],["tools",{"2":{"13":3}}],["time",{"2":{"54":1}}],["tizien",{"2":{"1":1}}],["tip",{"2":{"0":1}}],["的影响",{"2":{"57":1}}],["的离线包模式为例",{"2":{"54":1}}],["的感觉",{"2":{"51":1}}],["的宿主",{"2":{"39":1}}],["的时候",{"2":{"24":1}}],["的",{"2":{"24":1,"39":1,"57":1}}],["的选项",{"2":{"13":1}}],["的镜像源",{"2":{"6":1}}],["的版本应⼤于等于",{"2":{"6":1}}],["修改",{"2":{"6":1}}],["size",{"2":{"51":1}}],["sim",{"2":{"18":1}}],["ssr",{"2":{"50":1,"51":1,"52":1}}],["ssl",{"2":{"13":1}}],["skia是跨平台的",{"2":{"48":1}}],["skia是google的一个2d图形处理函数库",{"2":{"48":1}}],["schema协议",{"0":{"40":1}}],["scheme",{"2":{"39":3,"54":1}}],["script",{"2":{"25":2}}],["src=",{"2":{"25":1,"34":1}}],["save",{"2":{"22":1}}],["store",{"2":{"17":1}}],["studio",{"0":{"13":1},"1":{"14":1},"2":{"13":4}}],["services",{"2":{"15":1}}],["set",{"2":{"6":1}}],["system",{"2":{"13":1}}],["shut",{"2":{"13":1}}],["show",{"2":{"13":2}}],["shellapp",{"2":{"33":1}}],["shellinstalled",{"2":{"22":1}}],["shellcd",{"2":{"22":1}}],["shellcordova",{"2":{"21":1,"25":1}}],["shellnpm",{"2":{"18":1,"20":1}}],["shellgradle",{"2":{"15":1}}],["shelljava",{"2":{"12":1}}],["shell",{"2":{"6":1,"23":1}}],["sdk",{"2":{"13":11,"14":3,"54":2,"59":1}}],["spa",{"2":{"1":1}}],["镜像源",{"2":{"6":1}}],["nsr",{"2":{"52":1}}],["native和weex的渲染",{"2":{"46":1}}],["native和weex相比主要有两点不同",{"2":{"46":1}}],["native使用react",{"2":{"45":1}}],["native类似",{"2":{"45":1}}],["native是web开发技术栈",{"2":{"44":1}}],["native是原生控件渲染",{"2":{"44":1}}],["native中主要有两个作用",{"2":{"44":1}}],["native的原理和react设计一致",{"2":{"44":1}}],["native",{"0":{"44":1,"63":1},"2":{"39":5,"41":2,"43":1,"44":1,"61":1}}],["na",{"2":{"37":1,"59":1}}],["name=",{"2":{"34":2}}],["name",{"2":{"34":2,"54":1}}],["npm",{"2":{"6":5,"18":1}}],["node",{"0":{"6":1},"2":{"5":2,"6":2,"57":1}}],["去中心化移动应用安全解决方案",{"2":{"60":1}}],["去哪儿网快速app开发及问题解决平台实践",{"2":{"60":1}}],["去",{"2":{"6":1}}],["版本可能会存在较多没有变化的静态资源",{"2":{"53":1}}],["版本",{"2":{"6":1,"13":1}}],["推荐安装",{"2":{"6":1}}],["编辑器",{"2":{"5":1}}],["平台的配置",{"2":{"34":2}}],["平台名称",{"2":{"25":1}}],["平台下的",{"2":{"25":1}}],["平台下",{"2":{"25":1}}],["平台为例来解释",{"2":{"25":1}}],["平台⽬录",{"2":{"24":1}}],["平台",{"2":{"5":1,"22":1,"25":1}}],["+",{"2":{"5":1}}],["oppo移动研发平台建设实践",{"2":{"60":1}}],["oppo",{"2":{"35":1,"46":1}}],["online",{"2":{"54":3}}],["onload",{"2":{"27":1}}],["ondeviceready",{"2":{"27":3,"28":1,"29":1,"30":1,"31":1}}],["ok",{"2":{"13":1}}],["origin=",{"2":{"34":1}}],["oracle",{"2":{"10":2}}],["org",{"2":{"3":1,"6":1,"15":1,"31":1}}],["os",{"2":{"1":1}}],["跨栈数据传递",{"2":{"51":1}}],["跨浏览器的兼容性差",{"2":{"2":1}}],["跨平台解决方案",{"2":{"60":1}}],["跨平台其实是一个老生常谈的话题",{"2":{"41":1}}],["跨平台的兼容性有待提⾼",{"2":{"2":1}}],["跨平台",{"2":{"1":1}}],["不够自动化",{"2":{"53":1}}],["不论你是否了解过离线包方案",{"2":{"52":1}}],["不支持动态下发代码和热更新",{"2":{"48":1}}],["不需要再将skia打入apk中",{"2":{"48":1}}],["不能像hybrid和rn那些使用javascript",{"2":{"47":1}}],["不能使用蓝牙等",{"2":{"42":1}}],["不常用",{"2":{"37":1}}],["不管是",{"2":{"36":1}}],["不仔细计较的话和na的体验基本类似",{"2":{"35":1}}],["不同平台的控件需要单独维护",{"2":{"43":1}}],["不同",{"2":{"25":1}}],["不是当前⽬录下的",{"2":{"25":1}}],["不适合做⾼性能应⽤",{"2":{"2":1}}],["不足之处",{"2":{"47":1}}],["不足",{"0":{"2":1}}],["⿊莓",{"2":{"1":1}}],["aisware",{"2":{"60":1}}],["ab",{"2":{"57":1}}],["access",{"2":{"34":1}}],["author",{"2":{"34":2,"54":1}}],["alert",{"2":{"28":1,"29":1,"30":1,"31":1}}],["allow",{"2":{"34":3}}],["all",{"2":{"15":1}}],["after",{"2":{"24":2}}],["available",{"2":{"22":1}}],["addeventlistener",{"2":{"27":1,"28":1,"29":1,"30":1,"31":1}}],["add",{"2":{"22":2}}],["atom",{"2":{"13":1}}],["assets",{"2":{"24":1}}],["as",{"2":{"13":1}}],["axuer",{"2":{"3":1}}],["app选型及演进方案",{"2":{"61":1}}],["app开发解决方案",{"2":{"60":1}}],["app研发效能提升和性能优化实践",{"2":{"60":1}}],["app工厂架构设计及在58集团应用",{"2":{"60":1}}],["appid表明了该业务",{"2":{"54":1}}],["appid",{"2":{"54":1}}],["appconfig",{"2":{"54":2}}],["appcan",{"2":{"42":1}}],["app的android安装包比ios安装包小的主要原因",{"2":{"48":1}}],["app的更新需要android或ios",{"2":{"35":1}}],["appstore应用商店审核的",{"2":{"35":1}}],["apps",{"2":{"34":1}}],["appname",{"2":{"33":1}}],["app",{"2":{"17":1,"33":2,"42":1,"48":1,"55":1,"60":1}}],["appdata",{"2":{"14":2}}],["apache",{"2":{"3":2,"31":1}}],["apicloud",{"2":{"61":1}}],["apicloud尚德聚",{"2":{"61":1}}],["apis",{"2":{"39":3}}],["api",{"2":{"2":1,"27":1}}],["amazon",{"2":{"1":1}}],["android应用功耗监控与优化心得",{"2":{"60":1}}],["android应用安装包",{"2":{"48":1}}],["android组件化开发",{"2":{"60":1}}],["android平台",{"2":{"48":1}}],["android",{"0":{"8":1,"13":1,"14":1},"1":{"9":1,"10":1,"11":1,"12":1,"14":1},"2":{"1":1,"5":2,"9":1,"13":12,"14":4,"22":4,"23":2,"24":1,"33":1,"34":2,"36":2,"39":1,"41":1,"42":1,"54":1}}],["weexnative架构",{"2":{"62":1}}],["weex在微医app应用实践",{"2":{"62":1}}],["weex在淘宝上也有广泛的应用",{"2":{"45":1}}],["weex开发者工具探究",{"2":{"62":1}}],["weex架构简介和性能优化实战",{"2":{"62":1}}],["weex是阿里巴巴于2016年发布的跨平台移动端开发框架",{"2":{"45":1}}],["weex",{"0":{"45":1,"62":1},"2":{"41":2,"62":2}}],["webf是如何高性能实现flutter+web融合的",{"2":{"64":1}}],["web和客户端的桥",{"2":{"59":1}}],["webpack",{"2":{"54":3}}],["webveiw",{"2":{"52":1}}],["webview与h5的那点事",{"2":{"61":1}}],["webview不堪重任",{"2":{"42":1}}],["webview就成为了javascript与原生api之间通信的桥梁",{"2":{"42":1}}],["webview是app中的一个组件",{"2":{"36":1}}],["webview",{"0":{"36":1},"2":{"36":1,"39":5,"50":4,"52":3}}],["webkit",{"2":{"39":1}}],["web",{"2":{"0":4,"27":1,"36":2,"61":1}}],["window",{"2":{"39":1}}],["windows",{"2":{"1":1,"10":1,"22":1,"36":1}}],["widget",{"2":{"34":2}}],["www⽬录下",{"2":{"24":1}}],["www",{"2":{"10":1,"24":1,"25":2,"54":1}}],["多端部署",{"2":{"1":1}}],["学习成本低",{"2":{"1":1}}],["⽀持移动端功能",{"2":{"0":1}}],["摄像头等",{"2":{"0":2}}],["蓝⽛",{"2":{"0":2}}],["定位",{"2":{"0":2}}],["例如举报",{"2":{"37":1}}],["例如头条的新闻详情页",{"2":{"37":1}}],["例如头条的首页",{"2":{"37":1}}],["例如",{"2":{"0":2,"5":1,"10":1,"13":2,"15":1,"22":1,"24":1,"33":1,"43":1}}],["⽤于将的",{"2":{"0":1}}],["是不能够将预创建页面的",{"2":{"57":1}}],["是对仅在",{"2":{"55":1}}],["是指页面在渲染内容完成前",{"2":{"51":1}}],["是一种常用的工程手段",{"2":{"51":1}}],["是一种使用静态数据预先填充页面",{"2":{"51":1}}],["是一个javascript解释器",{"2":{"44":1}}],["是javascript与原生应用之间通信的桥梁",{"2":{"44":1}}],["是facebook早先开源的js框架",{"2":{"44":1}}],["是facebook于2015年4月开源的跨平台移动应用开发框架",{"2":{"44":1}}],["是针对安卓开发的套件",{"2":{"13":1}}],["是安卓开发的编辑器和运⾏环境",{"2":{"13":1}}],["是",{"2":{"9":1,"22":1,"33":1,"48":1}}],["是⼀个容器",{"2":{"0":1}}],["是⽤",{"2":{"0":1}}],["构建移动应⽤的平台",{"2":{"0":1}}],["和原生平台的交互",{"2":{"39":1}}],["和",{"2":{"0":1,"1":2,"5":1,"24":1,"36":1,"39":1,"41":1,"48":1,"51":1,"53":1}}],["case",{"2":{"56":1}}],["check",{"2":{"54":1}}],["chrome浏览器和android均采用skia作为其绘图引擎",{"2":{"48":1}}],["cd",{"2":{"53":2}}],["ci",{"2":{"53":2}}],["csr",{"2":{"50":2}}],["cssom",{"2":{"51":2}}],["css",{"2":{"0":1,"1":1,"38":1,"50":1,"51":4,"54":2,"57":1}}],["created",{"2":{"54":1}}],["create",{"2":{"21":1}}],["cli",{"0":{"20":1}}],["context",{"2":{"39":2}}],["content",{"2":{"34":1}}],["config",{"0":{"32":1},"1":{"33":1,"34":1},"2":{"6":2,"22":1,"24":1,"33":4}}],["copy",{"2":{"24":1}}],["code",{"2":{"5":1}}],["com",{"2":{"3":2,"10":1,"13":1,"54":2}}],["cordovaapp",{"2":{"21":2}}],["cordova",{"0":{"0":1,"20":1,"25":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1},"2":{"0":2,"1":1,"2":3,"3":3,"5":1,"7":1,"20":2,"21":2,"22":3,"23":3,"24":1,"25":5,"26":1,"27":1,"31":2,"33":1,"41":2}}],["技术分享",{"0":{"60":1}}],["技术文章",{"0":{"59":1}}],["技术方案也是历经变迁",{"2":{"41":1}}],["技术就诞生了",{"2":{"39":1}}],["技术开放",{"2":{"36":1}}],["技术",{"2":{"0":2}}]],"serializationVersion":2}';export{e as default};
